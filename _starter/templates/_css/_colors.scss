// COLORS
@mixin automated_colors {
<% for (const scheme in pkg.colors) { -%>
<% if (scheme === 'default') { -%>
<% for (const color in pkg.colors[scheme]) { -%>
<% let colorVal = pkg.colors[scheme][color] -%>
    --color-<%- color %>-rgb: #{ red(<%- colorVal %>) }, #{ green(<%- colorVal %>) }, #{ blue(<%- colorVal %>) };
    --color-<%- color %>-a: #{ alpha(<%- colorVal %>) };
    --color-<%- color %>: rgba(var(--color-<%- color %>-rgb), var(--color-<%- color %>-a));
<% } -%>
<% } else { -%>
  @media (prefers-color-scheme: <%- scheme %>) {
<% for (const color in pkg.colors[scheme]) { -%>
<% let colorVal = pkg.colors[scheme][color] -%>
      --color-<%- color %>-rgb: #{ red(<%- colorVal %>) }, #{ green(<%- colorVal %>) }, #{ blue(<%- colorVal %>) };
      --color-<%- color %>-a: #{ alpha(<%- colorVal %>) };
      --color-<%- color %>: rgba(var(--color-<%- color %>-rgb), var(--color-<%- color %>-a));
<% } -%>
  }
<% } } -%>
}

<% for (const color in pkg.colors.default) { %>$color_<%- color %>: var(--color-<%- color %>);
<% } %>
<% for (const color in pkg.colors.default) { %>$color_<%- color %>_raw: <%- pkg.colors.default[color] %>;
<% } %>
@mixin automated_color_modifiers($selector, $property) {<% for (const color in pkg.colors.default) { %>
  @at-root #{ $selector}--<%- color %> {
    #{$property}: $color_<%- color %>;
  };<% } %>
}
@mixin automated_color_schemes {
<% for (const scheme in pkg.colors) { -%>
  @at-root #{&}[data-color-scheme=<%- scheme %>] {
<% for (const color in pkg.colors[scheme]) { -%>
<% let colorVal = pkg.colors[scheme][color] -%>
    --color-<%- color %>-rgb: #{ red(<%- colorVal %>) }, #{ green(<%- colorVal %>) }, #{ blue(<%- colorVal %>) };
    --color-<%- color %>-a: #{ alpha(<%- colorVal %>) };
<% } -%>
  }
<% } -%>
}