<% let component = {
  title: "Video File",
  description: "Plays a video file. To allow users to control the video, add the `controls` attribute to the `video` tag.",
  background: "light",
  html: {
    demo: `${ include(paths.components.src + 'video/video.ejs', { c: {
        url: 'https://starter.wbrowar.com/video/clip.mp4',
    } }) }`,
    code:
`${ ('< %-').replace(' ','') } include(paths.components.src + 'video/video.ejs', { c: {
    url: 'https://starter.wbrowar.com/video/clip.mp4',
} }) ${ ('% >').replace(' ','') }`,
    modifiers: ['no_aspect']
  },
  twig: {
    code:
`{% import 'macros/component.twig' as component %}
{{ component.c('video', { url: 'https://starter.wbrowar.com/video/clip.mp4' }) }}`,
    options: [
      { "name": 'autoplay', "required": false, "type": 'boolean', "default": `false`, "description": `If set to true, video will play when it is loaded.` },
      { "name": 'controls', "required": false, "type": 'boolean', "default": `true`, "description": `Display controls on or off.` },
      { "name": 'lazyLoad', "required": false, "type": 'boolean', "default": `true`, "description": `Adds the data attributes used by lazy.js to load the file when the user scrolls to it on the page.` },
      { "name": 'loop', "required": false, "type": 'boolean', "default": `false`, "description": `Loops the video file.` },
      { "name": 'muted', "required": false, "type": 'boolean', "default": `false`, "description": `Mutes the video's audio.` },
      { "name": 'poster', "required": false, "type": 'string', "description": `Url of an image to show when the video is loading and before the video is played.` },
      { "name": 'source', "required": false, "type": 'string', "default": `'file'`, "description": `Changes embed code based on source of the video. Options include: <b>youtube</b>, <b>vimeo</b>, or <b>file</b>.` },
      { "name": 'url', "required": true, "type": 'string', "default": ``, "description": `URL of video file used when the source option is set to 'file'.` }
    ]
  }
} %>
<%- include(paths.starter.styleInventory + '_demo.ejs', { component: component, paths: paths, pkg: pkg, release: release }) %>

<% component = {
  title: "Iframe Video (YouTube, Vimeo, etc ...)",
  description: "An iframe used to embed video content. Wraps the iframe in a `video` class to resize video in a 16:9 ratio.",
  background: "light",
  html: {
    demo: `${ include(paths.components.src + 'video/video.ejs', { c: {
        source: 'youtube',
        videoId: 'G4Sn91t1V4g',
    } }) }`,
    code:
`${ ('< %-').replace(' ','') } include(paths.components.src + 'video/video.ejs', { c: {
    source: 'youtube',
    videoId: 'G4Sn91t1V4g',
} }) ${ ('% >').replace(' ','') }`
  },
  twig: {
    code:
`{% import 'macros/component.twig' as component %}
{{ component.c('video', { source: 'youtube', videoId: 'G4Sn91t1V4g' }) }}`,
    options: [
      { "name": 'source', "required": false, "type": 'string', "default": `'file'`, "description": `Changes embed code based on source of the video. Options include: <b>youtube</b>, <b>vimeo</b>, or <b>file</b>.` },
      { "name": 'videoId', "required": false, "type": 'string', "default": ``, "description": `ID of video as found on video hosting sites. Usually can be pulled from a URL or video embed tag.` },
    ]
  }
} %>
<%- include(paths.starter.styleInventory + '_demo.ejs', { component: component, paths: paths, pkg: pkg, release: release }) %>